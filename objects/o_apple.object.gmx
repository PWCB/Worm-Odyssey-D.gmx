<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>s_apple</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>self</parentName>
  <maskName>s_ball80</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>surf = surface_create(sprite_width, sprite_height);
dir = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite_ext(s_apple, -1, x, y, 3+sin(current_time/300)/6, 3-sin(current_time/300)/6, dir, c_white, 1);
draw_sprite_ext(s_leaf, -1, x+72+8*sin(current_time/300), y, 2.3+sin(current_time/300)/6, 2.3-sin(current_time/300)/6, dir+sin((current_time+500)/300)*15, c_white, 1);
surface_set_target(o_stuff.outlinesurf);
draw_sprite_ext(s_apple, -1, x - o_stuff.sx, y - o_stuff.sy, 3+sin(current_time/300)/6, 3-sin(current_time/300)/6, dir, c_white, 1);
draw_sprite_ext(s_leaf, -1, x+72+8*sin(current_time/300) - o_stuff.sx, y - o_stuff.sy, 2.3+sin(current_time/300)/6, 2.3-sin(current_time/300)/6, dir+sin((current_time+500)/300)*15, c_white, 1);
surface_reset_target();
/*
if !surface_exists(surf){surf = surface_create(sprite_width, sprite_height);}
surface_set_target(surf);

//draw_set_color(make_color_rgb(181, 69, 32));
//repeat(25){
//    draw_circle(random(sprite_width), random(sprite_height), random(4), 0);
//}
//draw_set_alpha(0.005);
//draw_rectangle(0, 0, sprite_width, sprite_height, 0);
//draw_set_alpha(1);

draw_set_color(make_color_rgb(255, 248, 209));
var seg;
for(i = 0; i &lt; instance_number(o_wormseg); i++){
    seg = instance_find(o_wormseg, i);
    if seg.dig == 1{
        draw_circle(seg.x - x, seg.y - y, seg.size*seg.sprite_width, 0);
    }
}

surface_reset_target();

draw_set_color(make_color_rgb(150, 110, 60));
draw_rectangle(x, y, x + sprite_width, y + sprite_height, 0);
//outline
surface_set_target(o_stuff.outlinesurf);
draw_rectangle(x - o_stuff.sx, y - o_stuff.sy, x + sprite_width - o_stuff.sx, y + sprite_height - o_stuff.sy, 0);
surface_reset_target();
draw_set_color(c_white);
draw_surface(surf, x, y);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
