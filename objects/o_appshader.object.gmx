<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-4</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>application_surface_draw_enable(1);
n = 1;
w = surface_get_width(application_surface)*n;
h = surface_get_height(application_surface);
apcopy = surface_create(w, h);
//outlinesurf = surface_create(w, h);
surfw = w//surface_get_width(application_surface);
surfh = h//surface_get_height(application_surface);

uwidth = shader_get_uniform(sh_appshader, "u_width");
uheight = shader_get_uniform(sh_appshader, "u_height");
ugreentex = shader_get_sampler_index(sh_appshader, "u_ditherTex");


//apcopy0 = surface_create(view_wview,view_hview);
//apcopy1 = surface_create(view_wview,view_hview);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if window_get_fullscreen(){n = 1.5;}else{n = 1;}
w = surface_get_width(application_surface)*n;
h = surface_get_height(application_surface);
if !(surface_exists(apcopy)){apcopy = surface_create(w, h);}

if surface_exists(apcopy) &amp;&amp; surface_exists(application_surface){
    
   
    //dither
    surface_copy(apcopy, 0, 0, application_surface);

    shader_set(sh_appshader);
    
    shader_set_uniform_f(uwidth, surfw);
    shader_set_uniform_f(uheight, surfh);
    texture_set_stage(ugreentex, background_get_texture(tex_dither));
    
    draw_enable_alphablend(0);
    draw_surface_ext(apcopy, 0, 0, window_get_width()/w, window_get_height()/h, 0, c_white, 1);
    draw_enable_alphablend(1);
    
    shader_reset();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
